{"ast":null,"code":"var _jsxFileName = \"/Volumes/F/66/55/src/baseUI/scroll/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BetterScroll from \"better-scroll\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollContainer = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n`;\n/** \n * forwardRef\n * props: 父组件传递的props\n * ref: 父组件传递的ref,希望在封装组件时，外层组件通过ref直接控制内层组件或元素的行为\n */\n\n_c = ScrollContainer;\nconst Scroll = /*#__PURE__*/forwardRef(_c2 = _s((props, ref) => {\n  _s();\n\n  const [bScroll, setBScroll] = useState();\n  const scrollContainerRef = useRef(); //获取scroll实例需要的DOM元素\n\n  const {\n    direction,\n    click,\n    refresh,\n    bounceTop,\n    bounceBottom\n  } = props;\n  const {\n    pullUp,\n    pullDown,\n    onScroll\n  } = props;\n  useEffect(() => {\n    const scroll = new BetterScroll(scrollContainerRef.current, {\n      scrollX: direction === \"horizontal\",\n      scrollY: direction === \"vertical\",\n      probeType: 3,\n      click,\n      bounce: {\n        top: bounceTop,\n        bottom: bounceBottom\n      }\n    });\n    setBScroll(scroll);\n    return () => {\n      setBScroll(null);\n    };\n  }, []); //给实例绑定scroll事件\n\n  useEffect(() => {\n    if (!bScroll || !onScroll) return;\n    bScroll.on(\"scroll\", scroll => {\n      onScroll(scroll);\n    });\n    return () => {\n      bScroll.off(\"scroll\");\n    };\n  }, [onScroll, bScroll]); //进行上拉到头的逻辑判断，调用上拉刷新的函数\n\n  useEffect(() => {\n    if (!bScroll || !pullUp) return;\n    bScroll.on(\"scrollEnd\", () => {\n      // 判断是否滑倒了底部\n      if (bScroll.y <= bScroll.maxScrollY + 100) {\n        pullUp();\n      }\n    });\n    return () => {\n      bScroll.off(\"scrollEnd\");\n    };\n  }, [pullUp, bScroll]); //进行下拉的判断，调用下拉刷新的函数\n\n  useEffect(() => {\n    if (!bScroll || !pullDown) return;\n    bScroll.on(\"touchEnd\", pos => {\n      // 判断用户是否下拉\n      if (pos.y > 50) {\n        pullDown();\n      }\n    });\n    return () => {\n      bScroll.off(\"touchEnd\");\n    };\n  }, [pullDown, bScroll]); //每次重新渲染都需要刷新实例，防止无法滑动\n\n  useEffect(() => {\n    if (refresh && bScroll) {\n      bScroll.refresh();\n    }\n  }); //useImperativeHandle可以使父子组件分别有自己的ref.current\n  //和forwardRef 配合使用,useImperativeHandle 可以在使用ref时自定义暴露给父组件的实例值\n\n  useImperativeHandle(ref, () => ({\n    //暴露给外界的方法\n    refresh() {\n      if (bScroll) {\n        bScroll.refresh();\n        bScroll.scrollTo(0, 0);\n      }\n    },\n\n    getBScroll() {\n      if (bScroll) {\n        //提供scroll实例\n        return bScroll;\n      }\n    }\n\n  }));\n  return /*#__PURE__*/_jsxDEV(ScrollContainer, {\n    ref: scrollContainerRef,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}, \"uhRHOMH9IXC04slLI/9rCpxmA9Q=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c3 = Scroll;\nScroll.defaultProps = {\n  direction: \"vertical\",\n  click: true,\n  refresh: true,\n  onScroll: null,\n  pullUpLoading: false,\n  pullDownLoading: false,\n  pullUp: null,\n  pullDown: null,\n  bounceTop: true,\n  bounceBottom: true\n};\nScroll.propTypes = {\n  direction: PropTypes.oneOf([\"vertical\", \"horizontal\"]),\n  //滚动方向\n  click: PropTypes.bool,\n  //是否支持点击\n  refresh: PropTypes.bool,\n  //是否刷新\n  onScroll: PropTypes.func,\n  //滑动触发的回调函数\n  pullUpLoading: PropTypes.bool,\n  //是否显示上拉loading动画\n  pullDownLoading: PropTypes.bool,\n  //是否显示下拉loading动画\n  pullUp: PropTypes.func,\n  //上拉加载逻辑\n  pullDown: PropTypes.func,\n  //下拉加载逻辑\n  bounceTop: PropTypes.bool,\n  //是否支持向上吸顶\n  bounceBottom: PropTypes.bool //是否支持向下吸底\n\n};\nexport default Scroll;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ScrollContainer\");\n$RefreshReg$(_c2, \"Scroll$forwardRef\");\n$RefreshReg$(_c3, \"Scroll\");","map":{"version":3,"sources":["/Volumes/F/66/55/src/baseUI/scroll/index.js"],"names":["React","forwardRef","useEffect","useImperativeHandle","useRef","useState","PropTypes","BetterScroll","styled","ScrollContainer","div","Scroll","props","ref","bScroll","setBScroll","scrollContainerRef","direction","click","refresh","bounceTop","bounceBottom","pullUp","pullDown","onScroll","scroll","current","scrollX","scrollY","probeType","bounce","top","bottom","on","off","y","maxScrollY","pos","scrollTo","getBScroll","children","defaultProps","pullUpLoading","pullDownLoading","propTypes","oneOf","bool","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,mBAAvC,EAA4DC,MAA5D,EAAoEC,QAApE,QAAoF,OAApF;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AACA,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAI;AACnC;AACA;AACA;AACA,CAJA;AAKA;AACA;AACA;AACA;AACA;;KATMD,e;AAUN,MAAME,MAAM,gBAAGV,UAAU,UAAC,CAACW,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AACA,QAAMW,kBAAkB,GAAGZ,MAAM,EAAjC,CAFsC,CAEF;;AACpC,QAAM;AAAEa,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA;AAAxC,MAAyDT,KAA/D;AACA,QAAM;AAAEU,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAAiCZ,KAAvC;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuB,MAAM,GAAG,IAAIlB,YAAJ,CAAiBS,kBAAkB,CAACU,OAApC,EAA6C;AACxDC,MAAAA,OAAO,EAAEV,SAAS,KAAK,YADiC;AAExDW,MAAAA,OAAO,EAAEX,SAAS,KAAK,UAFiC;AAGxDY,MAAAA,SAAS,EAAE,CAH6C;AAIxDX,MAAAA,KAJwD;AAKxDY,MAAAA,MAAM,EAAE;AACJC,QAAAA,GAAG,EAAEX,SADD;AAEJY,QAAAA,MAAM,EAAEX;AAFJ;AALgD,KAA7C,CAAf;AAUAN,IAAAA,UAAU,CAACU,MAAD,CAAV;AACA,WAAO,MAAM;AACTV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAFD;AAGH,GAfQ,EAeN,EAfM,CAAT,CALsC,CAsBtC;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACY,OAAD,IAAY,CAACU,QAAjB,EAA2B;AAC3BV,IAAAA,OAAO,CAACmB,EAAR,CAAW,QAAX,EAAsBR,MAAD,IAAY;AAC7BD,MAAAA,QAAQ,CAACC,MAAD,CAAR;AACH,KAFD;AAGA,WAAO,MAAM;AACTX,MAAAA,OAAO,CAACoB,GAAR,CAAY,QAAZ;AACH,KAFD;AAGH,GARQ,EAQN,CAACV,QAAD,EAAWV,OAAX,CARM,CAAT,CAvBsC,CAiCtC;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACY,OAAD,IAAY,CAACQ,MAAjB,EAAyB;AACzBR,IAAAA,OAAO,CAACmB,EAAR,CAAW,WAAX,EAAwB,MAAM;AAC1B;AACA,UAAInB,OAAO,CAACqB,CAAR,IAAarB,OAAO,CAACsB,UAAR,GAAqB,GAAtC,EAA2C;AACvCd,QAAAA,MAAM;AACT;AACJ,KALD;AAMA,WAAO,MAAM;AACTR,MAAAA,OAAO,CAACoB,GAAR,CAAY,WAAZ;AACH,KAFD;AAGH,GAXQ,EAWN,CAACZ,MAAD,EAASR,OAAT,CAXM,CAAT,CAlCsC,CA+CtC;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACY,OAAD,IAAY,CAACS,QAAjB,EAA2B;AAC3BT,IAAAA,OAAO,CAACmB,EAAR,CAAW,UAAX,EAAwBI,GAAD,IAAS;AAC5B;AACA,UAAIA,GAAG,CAACF,CAAJ,GAAQ,EAAZ,EAAgB;AACZZ,QAAAA,QAAQ;AACX;AACJ,KALD;AAMA,WAAO,MAAM;AACTT,MAAAA,OAAO,CAACoB,GAAR,CAAY,UAAZ;AACH,KAFD;AAGH,GAXQ,EAWN,CAACX,QAAD,EAAWT,OAAX,CAXM,CAAT,CAhDsC,CA6DtC;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,OAAO,IAAIL,OAAf,EAAwB;AACpBA,MAAAA,OAAO,CAACK,OAAR;AACH;AACJ,GAJQ,CAAT,CA9DsC,CAoEtC;AACA;;AACAhB,EAAAA,mBAAmB,CAACU,GAAD,EAAM,OAAO;AAAC;AAC7BM,IAAAA,OAAO,GAAG;AACN,UAAIL,OAAJ,EAAa;AACTA,QAAAA,OAAO,CAACK,OAAR;AACAL,QAAAA,OAAO,CAACwB,QAAR,CAAiB,CAAjB,EAAoB,CAApB;AACH;AACJ,KAN2B;;AAO5BC,IAAAA,UAAU,GAAG;AACT,UAAIzB,OAAJ,EAAa;AAAC;AACV,eAAOA,OAAP;AACH;AACJ;;AAX2B,GAAP,CAAN,CAAnB;AAaA,sBACI,QAAC,eAAD;AAAiB,IAAA,GAAG,EAAEE,kBAAtB;AAAA,cACKJ,KAAK,CAAC4B;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxFwB;AAAA,UAsErBrC,mBAtEqB;AAAA,GAAzB;MAAMQ,M;AA2FNA,MAAM,CAAC8B,YAAP,GAAsB;AAClBxB,EAAAA,SAAS,EAAE,UADO;AAElBC,EAAAA,KAAK,EAAE,IAFW;AAGlBC,EAAAA,OAAO,EAAE,IAHS;AAIlBK,EAAAA,QAAQ,EAAE,IAJQ;AAKlBkB,EAAAA,aAAa,EAAE,KALG;AAMlBC,EAAAA,eAAe,EAAE,KANC;AAOlBrB,EAAAA,MAAM,EAAE,IAPU;AAQlBC,EAAAA,QAAQ,EAAE,IARQ;AASlBH,EAAAA,SAAS,EAAE,IATO;AAUlBC,EAAAA,YAAY,EAAE;AAVI,CAAtB;AAaAV,MAAM,CAACiC,SAAP,GAAmB;AACf3B,EAAAA,SAAS,EAAEX,SAAS,CAACuC,KAAV,CAAgB,CAAC,UAAD,EAAa,YAAb,CAAhB,CADI;AACwC;AACvD3B,EAAAA,KAAK,EAAEZ,SAAS,CAACwC,IAFF;AAEO;AACtB3B,EAAAA,OAAO,EAAEb,SAAS,CAACwC,IAHJ;AAGS;AACxBtB,EAAAA,QAAQ,EAAElB,SAAS,CAACyC,IAJL;AAIU;AACzBL,EAAAA,aAAa,EAAEpC,SAAS,CAACwC,IALV;AAKe;AAC9BH,EAAAA,eAAe,EAAErC,SAAS,CAACwC,IANZ;AAMiB;AAChCxB,EAAAA,MAAM,EAAEhB,SAAS,CAACyC,IAPH;AAOQ;AACvBxB,EAAAA,QAAQ,EAAEjB,SAAS,CAACyC,IARL;AAQU;AACzB3B,EAAAA,SAAS,EAAEd,SAAS,CAACwC,IATN;AASW;AAC1BzB,EAAAA,YAAY,EAAEf,SAAS,CAACwC,IAVT,CAUc;;AAVd,CAAnB;AAaA,eAAenC,MAAf","sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BetterScroll from \"better-scroll\";\nimport styled from \"styled-components\";\nconst ScrollContainer = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n`;\n/** \n * forwardRef\n * props: 父组件传递的props\n * ref: 父组件传递的ref,希望在封装组件时，外层组件通过ref直接控制内层组件或元素的行为\n */\nconst Scroll = forwardRef((props, ref) => {\n    const [bScroll, setBScroll] = useState();\n    const scrollContainerRef = useRef();//获取scroll实例需要的DOM元素\n    const { direction, click, refresh, bounceTop, bounceBottom } = props;\n    const { pullUp, pullDown, onScroll } = props;\n    useEffect(() => {\n        const scroll = new BetterScroll(scrollContainerRef.current, {\n            scrollX: direction === \"horizontal\",\n            scrollY: direction === \"vertical\",\n            probeType: 3,\n            click,\n            bounce: {\n                top: bounceTop,\n                bottom: bounceBottom\n            }\n        });\n        setBScroll(scroll);\n        return () => {\n            setBScroll(null);\n        }\n    }, []);\n\n    //给实例绑定scroll事件\n    useEffect(() => {\n        if (!bScroll || !onScroll) return;\n        bScroll.on(\"scroll\", (scroll) => {\n            onScroll(scroll)\n        })\n        return () => {\n            bScroll.off(\"scroll\")\n        }\n    }, [onScroll, bScroll]);\n\n    //进行上拉到头的逻辑判断，调用上拉刷新的函数\n    useEffect(() => {\n        if (!bScroll || !pullUp) return;\n        bScroll.on(\"scrollEnd\", () => {\n            // 判断是否滑倒了底部\n            if (bScroll.y <= bScroll.maxScrollY + 100) {\n                pullUp()\n            }\n        });\n        return () => {\n            bScroll.off(\"scrollEnd\")\n        }\n    }, [pullUp, bScroll])\n\n    //进行下拉的判断，调用下拉刷新的函数\n    useEffect(() => {\n        if (!bScroll || !pullDown) return;\n        bScroll.on(\"touchEnd\", (pos) => {\n            // 判断用户是否下拉\n            if (pos.y > 50) {\n                pullDown()\n            }\n        });\n        return () => {\n            bScroll.off(\"touchEnd\")\n        }\n    }, [pullDown, bScroll])\n\n    //每次重新渲染都需要刷新实例，防止无法滑动\n    useEffect(() => {\n        if (refresh && bScroll) {\n            bScroll.refresh()\n        }\n    })\n\n    //useImperativeHandle可以使父子组件分别有自己的ref.current\n    //和forwardRef 配合使用,useImperativeHandle 可以在使用ref时自定义暴露给父组件的实例值\n    useImperativeHandle(ref, () => ({//暴露给外界的方法\n        refresh() {\n            if (bScroll) {\n                bScroll.refresh();\n                bScroll.scrollTo(0, 0)\n            }\n        },\n        getBScroll() {\n            if (bScroll) {//提供scroll实例\n                return bScroll;\n            }\n        }\n    }))\n    return (\n        <ScrollContainer ref={scrollContainerRef}>\n            {props.children}\n        </ScrollContainer>\n    )\n})\n\n\nScroll.defaultProps = {\n    direction: \"vertical\",\n    click: true,\n    refresh: true,\n    onScroll: null,\n    pullUpLoading: false,\n    pullDownLoading: false,\n    pullUp: null,\n    pullDown: null,\n    bounceTop: true,\n    bounceBottom: true,\n}\n\nScroll.propTypes = {\n    direction: PropTypes.oneOf([\"vertical\", \"horizontal\"]),//滚动方向\n    click: PropTypes.bool,//是否支持点击\n    refresh: PropTypes.bool,//是否刷新\n    onScroll: PropTypes.func,//滑动触发的回调函数\n    pullUpLoading: PropTypes.bool,//是否显示上拉loading动画\n    pullDownLoading: PropTypes.bool,//是否显示下拉loading动画\n    pullUp: PropTypes.func,//上拉加载逻辑\n    pullDown: PropTypes.func,//下拉加载逻辑\n    bounceTop: PropTypes.bool,//是否支持向上吸顶\n    bounceBottom: PropTypes.bool,//是否支持向下吸底\n}\n\nexport default Scroll;"]},"metadata":{},"sourceType":"module"}