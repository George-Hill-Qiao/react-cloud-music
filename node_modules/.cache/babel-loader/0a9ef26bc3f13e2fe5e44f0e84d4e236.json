{"ast":null,"code":"var _jsxFileName = \"/Volumes/F/66/55/src/baseUI/scroll/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BetterScroll from \"better-scroll\";\nimport styled from \"styled-components\";\nimport Loading from \"../loading/index\";\nimport LoadingV2 from \"../loading-v2/index\";\nimport { debounce } from 'utils'; //上拉loading\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PullUpLoading = styled.div`\n    position:absolute;\n    left:0;right:0;\n    bottom:5px;\n    width:60px;\n    height:60px;\n    margin:auto;\n    z-index:100;\n`; //下拉loading\n\n_c = PullUpLoading;\nconst PullDownLoading = styled.div`\n    position:absolute;\n    left:0;right:0;\n    top:0;\n    height:30px;\n    margin:auto;\n    z-index:100;\n`;\n_c2 = PullDownLoading;\nconst ScrollContainer = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n`;\n/** \n * forwardRef\n * props: 父组件传递的props\n * ref: 父组件传递的ref,希望在封装组件时，外层组件通过ref直接控制内层组件或元素的行为\n */\n\n_c3 = ScrollContainer;\nconst Scroll = /*#__PURE__*/forwardRef(_c4 = _s((props, ref) => {\n  _s();\n\n  const [bScroll, setBScroll] = useState();\n  const scrollContainerRef = useRef(); //获取scroll实例需要的DOM元素\n\n  const {\n    direction,\n    click,\n    refresh,\n    bounceTop,\n    bounceBottom\n  } = props;\n  const {\n    pullUp,\n    pullDown,\n    onScroll\n  } = props;\n  const pullUpDebounce = useMemo(() => debounce(pullUp, 300), []);\n  const pullDownDebounce = useMemo(() => debounce(pullDown, 300), []);\n  const {\n    pullUpLoading,\n    pullDownLoading\n  } = props;\n  const PullUpDisplayStyle = {\n    display: pullUpLoading ? '' : 'none'\n  };\n  const PullDownDisplayStyle = {\n    display: pullDownLoading ? '' : 'none'\n  };\n  useEffect(() => {\n    const scroll = new BetterScroll(scrollContainerRef.current, {\n      scrollX: direction === \"horizontal\",\n      scrollY: direction === \"vertical\",\n      probeType: 3,\n      click,\n      bounce: {\n        top: bounceTop,\n        bottom: bounceBottom\n      }\n    });\n    setBScroll(scroll);\n    return () => {\n      setBScroll(null);\n    };\n  }, []); //给实例绑定scroll事件\n\n  useEffect(() => {\n    if (!bScroll || !onScroll) return;\n    bScroll.on(\"scroll\", scroll => {\n      onScroll(scroll);\n    });\n    return () => {\n      bScroll.off(\"scroll\");\n    };\n  }, [onScroll, bScroll]); //进行上拉到头的逻辑判断，调用上拉刷新的函数\n\n  useEffect(() => {\n    if (!bScroll || !pullUp) return;\n    bScroll.on(\"scrollEnd\", () => {\n      // 判断是否滑倒了底部\n      if (bScroll.y <= bScroll.maxScrollY + 100) {\n        pullUpDebounce();\n      }\n    });\n    return () => {\n      bScroll.off(\"scrollEnd\");\n    };\n  }, [pullUp, bScroll]); //进行下拉的判断，调用下拉刷新的函数\n\n  useEffect(() => {\n    if (!bScroll || !pullDown) return;\n    bScroll.on(\"touchEnd\", pos => {\n      // 判断用户是否下拉\n      if (pos.y > 50) {\n        pullDownDebounce();\n      }\n    });\n    return () => {\n      bScroll.off(\"touchEnd\");\n    };\n  }, [pullDown, bScroll]); //每次重新渲染都需要刷新实例，防止无法滑动\n\n  useEffect(() => {\n    if (refresh && bScroll) {\n      bScroll.refresh();\n    }\n  }); //useImperativeHandle可以使父子组件分别有自己的ref.current\n  //和forwardRef 配合使用,useImperativeHandle 可以在使用ref时自定义暴露给父组件的实例值\n\n  useImperativeHandle(ref, () => ({\n    //暴露给外界的方法\n    refresh() {\n      if (bScroll) {\n        bScroll.refresh();\n        bScroll.scrollTo(0, 0);\n      }\n    },\n\n    getBScroll() {\n      if (bScroll) {\n        //提供scroll实例\n        return bScroll;\n      }\n    }\n\n  }));\n  return /*#__PURE__*/_jsxDEV(ScrollContainer, {\n    ref: scrollContainerRef,\n    children: [props.children, /*#__PURE__*/_jsxDEV(PullUpLoading, {\n      style: PullUpDisplayStyle,\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PullDownLoading, {\n      style: PullDownDisplayStyle,\n      children: /*#__PURE__*/_jsxDEV(LoadingV2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}, \"BVlcT1kp2D8zT8EJJ3/72oRsC6U=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c5 = Scroll;\nScroll.defaultProps = {\n  direction: \"vertical\",\n  click: true,\n  refresh: true,\n  onScroll: null,\n  pullUpLoading: false,\n  pullDownLoading: false,\n  pullUp: null,\n  pullDown: null,\n  bounceTop: true,\n  bounceBottom: true\n};\nScroll.propTypes = {\n  direction: PropTypes.oneOf([\"vertical\", \"horizontal\"]),\n  //滚动方向\n  click: PropTypes.bool,\n  //是否支持点击\n  refresh: PropTypes.bool,\n  //是否刷新\n  onScroll: PropTypes.func,\n  //滑动触发的回调函数\n  pullUpLoading: PropTypes.bool,\n  //是否显示上拉loading动画\n  pullDownLoading: PropTypes.bool,\n  //是否显示下拉loading动画\n  pullUp: PropTypes.func,\n  //上拉加载逻辑\n  pullDown: PropTypes.func,\n  //下拉加载逻辑\n  bounceTop: PropTypes.bool,\n  //是否支持向上吸顶\n  bounceBottom: PropTypes.bool //是否支持向下吸底\n\n};\nexport default Scroll;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"PullUpLoading\");\n$RefreshReg$(_c2, \"PullDownLoading\");\n$RefreshReg$(_c3, \"ScrollContainer\");\n$RefreshReg$(_c4, \"Scroll$forwardRef\");\n$RefreshReg$(_c5, \"Scroll\");","map":{"version":3,"sources":["/Volumes/F/66/55/src/baseUI/scroll/index.js"],"names":["React","forwardRef","useEffect","useImperativeHandle","useRef","useState","useMemo","PropTypes","BetterScroll","styled","Loading","LoadingV2","debounce","PullUpLoading","div","PullDownLoading","ScrollContainer","Scroll","props","ref","bScroll","setBScroll","scrollContainerRef","direction","click","refresh","bounceTop","bounceBottom","pullUp","pullDown","onScroll","pullUpDebounce","pullDownDebounce","pullUpLoading","pullDownLoading","PullUpDisplayStyle","display","PullDownDisplayStyle","scroll","current","scrollX","scrollY","probeType","bounce","top","bottom","on","off","y","maxScrollY","pos","scrollTo","getBScroll","children","defaultProps","propTypes","oneOf","bool","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,mBAAvC,EAA4DC,MAA5D,EAAoEC,QAApE,EAA6EC,OAA7E,QAA4F,OAA5F;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAAQC,QAAR,QAAuB,OAAvB,C,CACA;;;AACA,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA,C,CASA;;KATMD,a;AAUN,MAAME,eAAe,GAAGN,MAAM,CAACK,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMC,e;AASN,MAAMC,eAAe,GAAGP,MAAM,CAACK,GAAI;AACnC;AACA;AACA;AACA,CAJA;AAKA;AACA;AACA;AACA;AACA;;MATME,e;AAUN,MAAMC,MAAM,gBAAGhB,UAAU,UAAC,CAACiB,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,EAAtC;AACA,QAAMiB,kBAAkB,GAAGlB,MAAM,EAAjC,CAFsC,CAEF;;AACpC,QAAM;AAAEmB,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,SAA7B;AAAwCC,IAAAA;AAAxC,MAAyDT,KAA/D;AACA,QAAM;AAAEU,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAAgCZ,KAAtC;AACA,QAAMa,cAAc,GAAGzB,OAAO,CAAC,MAAOM,QAAQ,CAACgB,MAAD,EAAS,GAAT,CAAhB,EAA+B,EAA/B,CAA9B;AACA,QAAMI,gBAAgB,GAAG1B,OAAO,CAAC,MAAMM,QAAQ,CAACiB,QAAD,EAAW,GAAX,CAAf,EAAgC,EAAhC,CAAhC;AACA,QAAM;AAAEI,IAAAA,aAAF;AAAgBC,IAAAA;AAAhB,MAAoChB,KAA1C;AACA,QAAMiB,kBAAkB,GAAG;AAACC,IAAAA,OAAO,EAACH,aAAa,GAAC,EAAD,GAAI;AAA1B,GAA3B;AACA,QAAMI,oBAAoB,GAAE;AAACD,IAAAA,OAAO,EAACF,eAAe,GAAC,EAAD,GAAI;AAA5B,GAA5B;AACAhC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMoC,MAAM,GAAG,IAAI9B,YAAJ,CAAiBc,kBAAkB,CAACiB,OAApC,EAA6C;AACxDC,MAAAA,OAAO,EAAEjB,SAAS,KAAK,YADiC;AAExDkB,MAAAA,OAAO,EAAElB,SAAS,KAAK,UAFiC;AAGxDmB,MAAAA,SAAS,EAAE,CAH6C;AAIxDlB,MAAAA,KAJwD;AAKxDmB,MAAAA,MAAM,EAAE;AACJC,QAAAA,GAAG,EAAElB,SADD;AAEJmB,QAAAA,MAAM,EAAElB;AAFJ;AALgD,KAA7C,CAAf;AAUAN,IAAAA,UAAU,CAACiB,MAAD,CAAV;AACA,WAAO,MAAM;AACTjB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAFD;AAGH,GAfQ,EAeN,EAfM,CAAT,CAVsC,CA2BtC;;AACAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACkB,OAAD,IAAY,CAACU,QAAjB,EAA2B;AAC3BV,IAAAA,OAAO,CAAC0B,EAAR,CAAW,QAAX,EAAsBR,MAAD,IAAY;AAC7BR,MAAAA,QAAQ,CAACQ,MAAD,CAAR;AACH,KAFD;AAGA,WAAO,MAAM;AACTlB,MAAAA,OAAO,CAAC2B,GAAR,CAAY,QAAZ;AACH,KAFD;AAGH,GARQ,EAQN,CAACjB,QAAD,EAAWV,OAAX,CARM,CAAT,CA5BsC,CAsCtC;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACkB,OAAD,IAAY,CAACQ,MAAjB,EAAyB;AACzBR,IAAAA,OAAO,CAAC0B,EAAR,CAAW,WAAX,EAAwB,MAAM;AAC1B;AACA,UAAI1B,OAAO,CAAC4B,CAAR,IAAa5B,OAAO,CAAC6B,UAAR,GAAqB,GAAtC,EAA2C;AACvClB,QAAAA,cAAc;AACjB;AACJ,KALD;AAMA,WAAO,MAAM;AACTX,MAAAA,OAAO,CAAC2B,GAAR,CAAY,WAAZ;AACH,KAFD;AAGH,GAXQ,EAWN,CAACnB,MAAD,EAASR,OAAT,CAXM,CAAT,CAvCsC,CAoDtC;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACkB,OAAD,IAAY,CAACS,QAAjB,EAA2B;AAC3BT,IAAAA,OAAO,CAAC0B,EAAR,CAAW,UAAX,EAAwBI,GAAD,IAAS;AAC5B;AACA,UAAIA,GAAG,CAACF,CAAJ,GAAQ,EAAZ,EAAgB;AACZhB,QAAAA,gBAAgB;AACnB;AACJ,KALD;AAMA,WAAO,MAAM;AACTZ,MAAAA,OAAO,CAAC2B,GAAR,CAAY,UAAZ;AACH,KAFD;AAGH,GAXQ,EAWN,CAAClB,QAAD,EAAWT,OAAX,CAXM,CAAT,CArDsC,CAkEtC;;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIuB,OAAO,IAAIL,OAAf,EAAwB;AACpBA,MAAAA,OAAO,CAACK,OAAR;AACH;AACJ,GAJQ,CAAT,CAnEsC,CAyEtC;AACA;;AACAtB,EAAAA,mBAAmB,CAACgB,GAAD,EAAM,OAAO;AAAC;AAC7BM,IAAAA,OAAO,GAAG;AACN,UAAIL,OAAJ,EAAa;AACTA,QAAAA,OAAO,CAACK,OAAR;AACAL,QAAAA,OAAO,CAAC+B,QAAR,CAAiB,CAAjB,EAAoB,CAApB;AACH;AACJ,KAN2B;;AAO5BC,IAAAA,UAAU,GAAG;AACT,UAAIhC,OAAJ,EAAa;AAAC;AACV,eAAOA,OAAP;AACH;AACJ;;AAX2B,GAAP,CAAN,CAAnB;AAaA,sBACI,QAAC,eAAD;AAAiB,IAAA,GAAG,EAAEE,kBAAtB;AAAA,eACKJ,KAAK,CAACmC,QADX,eAGI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAElB,kBAAtB;AAAA,6BAA0C,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAEE,oBAAxB;AAAA,6BAA8C,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAA9C;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAjGwB;AAAA,UA2ErBlC,mBA3EqB;AAAA,GAAzB;MAAMc,M;AAoGNA,MAAM,CAACqC,YAAP,GAAsB;AAClB/B,EAAAA,SAAS,EAAE,UADO;AAElBC,EAAAA,KAAK,EAAE,IAFW;AAGlBC,EAAAA,OAAO,EAAE,IAHS;AAIlBK,EAAAA,QAAQ,EAAE,IAJQ;AAKlBG,EAAAA,aAAa,EAAE,KALG;AAMlBC,EAAAA,eAAe,EAAE,KANC;AAOlBN,EAAAA,MAAM,EAAE,IAPU;AAQlBC,EAAAA,QAAQ,EAAE,IARQ;AASlBH,EAAAA,SAAS,EAAE,IATO;AAUlBC,EAAAA,YAAY,EAAE;AAVI,CAAtB;AAaAV,MAAM,CAACsC,SAAP,GAAmB;AACfhC,EAAAA,SAAS,EAAEhB,SAAS,CAACiD,KAAV,CAAgB,CAAC,UAAD,EAAa,YAAb,CAAhB,CADI;AACwC;AACvDhC,EAAAA,KAAK,EAAEjB,SAAS,CAACkD,IAFF;AAEO;AACtBhC,EAAAA,OAAO,EAAElB,SAAS,CAACkD,IAHJ;AAGS;AACxB3B,EAAAA,QAAQ,EAAEvB,SAAS,CAACmD,IAJL;AAIU;AACzBzB,EAAAA,aAAa,EAAE1B,SAAS,CAACkD,IALV;AAKe;AAC9BvB,EAAAA,eAAe,EAAE3B,SAAS,CAACkD,IANZ;AAMiB;AAChC7B,EAAAA,MAAM,EAAErB,SAAS,CAACmD,IAPH;AAOQ;AACvB7B,EAAAA,QAAQ,EAAEtB,SAAS,CAACmD,IARL;AAQU;AACzBhC,EAAAA,SAAS,EAAEnB,SAAS,CAACkD,IATN;AASW;AAC1B9B,EAAAA,YAAY,EAAEpB,SAAS,CAACkD,IAVT,CAUc;;AAVd,CAAnB;AAaA,eAAexC,MAAf","sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useRef, useState,useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BetterScroll from \"better-scroll\";\nimport styled from \"styled-components\";\nimport Loading from \"../loading/index\";\nimport LoadingV2 from \"../loading-v2/index\";\nimport {debounce} from 'utils';\n//上拉loading\nconst PullUpLoading = styled.div`\n    position:absolute;\n    left:0;right:0;\n    bottom:5px;\n    width:60px;\n    height:60px;\n    margin:auto;\n    z-index:100;\n`;\n//下拉loading\nconst PullDownLoading = styled.div`\n    position:absolute;\n    left:0;right:0;\n    top:0;\n    height:30px;\n    margin:auto;\n    z-index:100;\n`;\n\nconst ScrollContainer = styled.div`\n    width:100%;\n    height:100%;\n    overflow:hidden;\n`;\n/** \n * forwardRef\n * props: 父组件传递的props\n * ref: 父组件传递的ref,希望在封装组件时，外层组件通过ref直接控制内层组件或元素的行为\n */\nconst Scroll = forwardRef((props, ref) => {\n    const [bScroll, setBScroll] = useState();\n    const scrollContainerRef = useRef();//获取scroll实例需要的DOM元素\n    const { direction, click, refresh, bounceTop, bounceBottom } = props;\n    const { pullUp, pullDown, onScroll} = props;\n    const pullUpDebounce = useMemo(() =>  debounce(pullUp, 300), [])\n    const pullDownDebounce = useMemo(() => debounce(pullDown, 300), []);\n    const { pullUpLoading,pullDownLoading } = props;\n    const PullUpDisplayStyle = {display:pullUpLoading?'':'none'};\n    const PullDownDisplayStyle ={display:pullDownLoading?'':'none'};\n    useEffect(() => {\n        const scroll = new BetterScroll(scrollContainerRef.current, {\n            scrollX: direction === \"horizontal\",\n            scrollY: direction === \"vertical\",\n            probeType: 3,\n            click,\n            bounce: {\n                top: bounceTop,\n                bottom: bounceBottom\n            }\n        });\n        setBScroll(scroll);\n        return () => {\n            setBScroll(null);\n        }\n    }, []);\n\n    //给实例绑定scroll事件\n    useEffect(() => {\n        if (!bScroll || !onScroll) return;\n        bScroll.on(\"scroll\", (scroll) => {\n            onScroll(scroll)\n        })\n        return () => {\n            bScroll.off(\"scroll\")\n        }\n    }, [onScroll, bScroll]);\n\n    //进行上拉到头的逻辑判断，调用上拉刷新的函数\n    useEffect(() => {\n        if (!bScroll || !pullUp) return;\n        bScroll.on(\"scrollEnd\", () => {\n            // 判断是否滑倒了底部\n            if (bScroll.y <= bScroll.maxScrollY + 100) {\n                pullUpDebounce()\n            }\n        });\n        return () => {\n            bScroll.off(\"scrollEnd\")\n        }\n    }, [pullUp, bScroll])\n\n    //进行下拉的判断，调用下拉刷新的函数\n    useEffect(() => {\n        if (!bScroll || !pullDown) return;\n        bScroll.on(\"touchEnd\", (pos) => {\n            // 判断用户是否下拉\n            if (pos.y > 50) {\n                pullDownDebounce()\n            }\n        });\n        return () => {\n            bScroll.off(\"touchEnd\")\n        }\n    }, [pullDown, bScroll])\n\n    //每次重新渲染都需要刷新实例，防止无法滑动\n    useEffect(() => {\n        if (refresh && bScroll) {\n            bScroll.refresh()\n        }\n    })\n\n    //useImperativeHandle可以使父子组件分别有自己的ref.current\n    //和forwardRef 配合使用,useImperativeHandle 可以在使用ref时自定义暴露给父组件的实例值\n    useImperativeHandle(ref, () => ({//暴露给外界的方法\n        refresh() {\n            if (bScroll) {\n                bScroll.refresh();\n                bScroll.scrollTo(0, 0)\n            }\n        },\n        getBScroll() {\n            if (bScroll) {//提供scroll实例\n                return bScroll;\n            }\n        }\n    }))\n    return (\n        <ScrollContainer ref={scrollContainerRef}>\n            {props.children}\n            {/* 底部上拉刷新动画 */}\n            <PullUpLoading style={PullUpDisplayStyle}><Loading/></PullUpLoading>\n            {/* 顶部下拉刷新动画 */}\n            <PullDownLoading style={PullDownDisplayStyle}><LoadingV2/></PullDownLoading>\n        </ScrollContainer>\n    )\n})\n\n\nScroll.defaultProps = {\n    direction: \"vertical\",\n    click: true,\n    refresh: true,\n    onScroll: null,\n    pullUpLoading: false,\n    pullDownLoading: false,\n    pullUp: null,\n    pullDown: null,\n    bounceTop: true,\n    bounceBottom: true,\n}\n\nScroll.propTypes = {\n    direction: PropTypes.oneOf([\"vertical\", \"horizontal\"]),//滚动方向\n    click: PropTypes.bool,//是否支持点击\n    refresh: PropTypes.bool,//是否刷新\n    onScroll: PropTypes.func,//滑动触发的回调函数\n    pullUpLoading: PropTypes.bool,//是否显示上拉loading动画\n    pullDownLoading: PropTypes.bool,//是否显示下拉loading动画\n    pullUp: PropTypes.func,//上拉加载逻辑\n    pullDown: PropTypes.func,//下拉加载逻辑\n    bounceTop: PropTypes.bool,//是否支持向上吸顶\n    bounceBottom: PropTypes.bool,//是否支持向下吸底\n}\n\nexport default Scroll;"]},"metadata":{},"sourceType":"module"}