{"ast":null,"code":"import axios from \"axios\";\nexport const baseUrl = \"http://47.97.249.134:3000\"; // axios的实例以及拦截器配置\n\nconst axiosInstance = axios.create({\n  baseURL: baseUrl\n});\naxiosInstance.interceptors.response.use(res => res.data, err => {\n  console.log(\"网络错误\", err);\n});\nexport { axiosInstance }; // 歌手种类\n\nexport const categoryTypes = [{\n  name: \"华语男\",\n  key: \"1001\"\n}, {\n  name: \"华语女\",\n  key: \"1002\"\n}, {\n  name: \"华语组合\",\n  key: \"1003\"\n}, {\n  name: \"欧美男\",\n  key: \"2001\"\n}, {\n  name: \"欧美女\",\n  key: \"2002\"\n}, {\n  name: \"欧美组合\",\n  key: \"2003\"\n}, {\n  name: \"日本男\",\n  key: \"6001\"\n}, {\n  name: \"日本女\",\n  key: \"6002\"\n}, {\n  name: \"日本组合\",\n  key: \"6003\"\n}, {\n  name: \"韩国男\",\n  key: \"7001\"\n}, {\n  name: \"韩国女\",\n  key: \"7002\"\n}, {\n  name: \"韩国组合\",\n  key: \"7003\"\n}, {\n  name: \"其他男歌手\",\n  key: \"4001\"\n}, {\n  name: \"其他女歌手\",\n  key: \"4002\"\n}, {\n  name: \"其他组合\",\n  key: \"4003\"\n}]; // 歌手首字母\n\nexport const alphaTypes = [{\n  key: \"A\",\n  name: \"A\"\n}, {\n  key: \"B\",\n  name: \"B\"\n}, {\n  key: \"C\",\n  name: \"C\"\n}, {\n  key: \"D\",\n  name: \"D\"\n}, {\n  key: \"E\",\n  name: \"E\"\n}, {\n  key: \"F\",\n  name: \"F\"\n}, {\n  key: \"G\",\n  name: \"G\"\n}, {\n  key: \"H\",\n  name: \"H\"\n}, {\n  key: \"I\",\n  name: \"I\"\n}, {\n  key: \"J\",\n  name: \"J\"\n}, {\n  key: \"K\",\n  name: \"K\"\n}, {\n  key: \"L\",\n  name: \"L\"\n}, {\n  key: \"M\",\n  name: \"M\"\n}, {\n  key: \"N\",\n  name: \"N\"\n}, {\n  key: \"O\",\n  name: \"O\"\n}, {\n  key: \"P\",\n  name: \"P\"\n}, {\n  key: \"Q\",\n  name: \"Q\"\n}, {\n  key: \"R\",\n  name: \"R\"\n}, {\n  key: \"S\",\n  name: \"S\"\n}, {\n  key: \"T\",\n  name: \"T\"\n}, {\n  key: \"U\",\n  name: \"U\"\n}, {\n  key: \"V\",\n  name: \"V\"\n}, {\n  key: \"W\",\n  name: \"W\"\n}, {\n  key: \"X\",\n  name: \"X\"\n}, {\n  key: \"Y\",\n  name: \"Y\"\n}, {\n  key: \"Z\",\n  name: \"Z\"\n}];","map":{"version":3,"sources":["/Volumes/F/66/55/src/api/config.js"],"names":["axios","baseUrl","axiosInstance","create","baseURL","interceptors","response","use","res","data","err","console","log","categoryTypes","name","key","alphaTypes"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nexport const baseUrl = \"http://47.97.249.134:3000\";\n// axios的实例以及拦截器配置\nconst axiosInstance = axios.create({\n    baseURL: baseUrl\n})\n\naxiosInstance.interceptors.response.use(\n    res => res.data,\n    err => {\n        console.log(\"网络错误\", err)\n    }\n)\n\nexport { axiosInstance }\n\n// 歌手种类\nexport const categoryTypes = [{\n    name: \"华语男\",\n    key: \"1001\"\n},\n{\n    name: \"华语女\",\n    key: \"1002\"\n},\n{\n    name: \"华语组合\",\n    key: \"1003\"\n},\n{\n    name: \"欧美男\",\n    key: \"2001\"\n},\n{\n    name: \"欧美女\",\n    key: \"2002\"\n},\n{\n    name: \"欧美组合\",\n    key: \"2003\"\n},\n{\n    name: \"日本男\",\n    key: \"6001\"\n},\n{\n    name: \"日本女\",\n    key: \"6002\"\n},\n{\n    name: \"日本组合\",\n    key: \"6003\"\n},\n{\n    name: \"韩国男\",\n    key: \"7001\"\n},\n{\n    name: \"韩国女\",\n    key: \"7002\"\n},\n{\n    name: \"韩国组合\",\n    key: \"7003\"\n},\n{\n    name: \"其他男歌手\",\n    key: \"4001\"\n},\n{\n    name: \"其他女歌手\",\n    key: \"4002\"\n},\n{\n    name: \"其他组合\",\n    key: \"4003\"\n},\n];\n\n// 歌手首字母\nexport const alphaTypes = [{\n    key: \"A\",\n    name: \"A\"\n},\n{\n    key: \"B\",\n    name: \"B\"\n},\n{\n    key: \"C\",\n    name: \"C\"\n},\n{\n    key: \"D\",\n    name: \"D\"\n},\n{\n    key: \"E\",\n    name: \"E\"\n},\n{\n    key: \"F\",\n    name: \"F\"\n},\n{\n    key: \"G\",\n    name: \"G\"\n},\n{\n    key: \"H\",\n    name: \"H\"\n},\n{\n    key: \"I\",\n    name: \"I\"\n},\n{\n    key: \"J\",\n    name: \"J\"\n},\n{\n    key: \"K\",\n    name: \"K\"\n},\n{\n    key: \"L\",\n    name: \"L\"\n},\n{\n    key: \"M\",\n    name: \"M\"\n},\n{\n    key: \"N\",\n    name: \"N\"\n},\n{\n    key: \"O\",\n    name: \"O\"\n},\n{\n    key: \"P\",\n    name: \"P\"\n},\n{\n    key: \"Q\",\n    name: \"Q\"\n},\n{\n    key: \"R\",\n    name: \"R\"\n},\n{\n    key: \"S\",\n    name: \"S\"\n},\n{\n    key: \"T\",\n    name: \"T\"\n},\n{\n    key: \"U\",\n    name: \"U\"\n},\n{\n    key: \"V\",\n    name: \"V\"\n},\n{\n    key: \"W\",\n    name: \"W\"\n},\n{\n    key: \"X\",\n    name: \"X\"\n},\n{\n    key: \"Y\",\n    name: \"Y\"\n},\n{\n    key: \"Z\",\n    name: \"Z\"\n}\n];"]},"metadata":{},"sourceType":"module"}