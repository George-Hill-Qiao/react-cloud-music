{"ast":null,"code":"var _jsxFileName = \"/Volumes/F/66/55/src/baseUI/level-item/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Scroll from \"../scroll/index\";\nimport PropTypes from \"prop-types\";\nimport style from \"../../assets/global-style\"; //列表的样式\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = styled.div`\n    display:flex;\n    align-items:center;\n    height:30px;\n    overflow:hidden;\n    >span:first-of-type{\n        display:block;\n        flex:0 0 auto;\n        padding:5px 0;\n        margin-right:5px;\n        color:grey;\n        font-size:${style[\"font-size-m\"]};\n        vertical-align:middle;\n    }\n`; //每一个列表项目的样式\n\n_c = List;\nconst ListItem = styled.span`\n    flex:0 0 auto;\n    font-size:${style[\"font-size-m\"]};\n    padding:5px 8px;\n    border-radius:10px;\n    &.selected{\n        color:${style[\"theme-color\"]};\n        border:1px solid ${style[\"theme-color\"]};\n        opacity:0.8;\n    }\n`;\n_c2 = ListItem;\n\nfunction LevelItem(props) {\n  _s();\n\n  const {\n    list,\n    oldVal,\n    title\n  } = props;\n  const {\n    handleClick\n  } = props;\n  const CategoryRef = useRef(null);\n  useEffect(() => {\n    let categoryDOM = CategoryRef.current; //获取其dom元素\n\n    let spans = categoryDOM.querySelectorAll(\"span\"); //获取到span所有的标签\n\n    let totalWidth = 0;\n    Array.from(spans).forEach(ele => {\n      totalWidth += ele.offsetWidth;\n    });\n    categoryDOM.style.width = `${totalWidth}px`; //获取到内容宽度\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Scroll, {\n    direction: \"horizontal\",\n    children: /*#__PURE__*/_jsxDEV(List, {\n      ref: CategoryRef,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), list.map(item => {\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          className: `${oldVal === item.key ? \"selected\" : \"\"}`,\n          onClick: () => handleClick(item.key),\n          children: item.name\n        }, item.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LevelItem, \"nJIpt78SCfDTqBh/6roVOBOnSQ4=\");\n\n_c3 = LevelItem;\nLevelItem.defaultProps = {\n  list: [],\n  //接收到的列表数据\n  oldVal: \"\",\n  //当前的item值\n  title: \"\",\n  //列表左边的标题\n  handleClick: null ///点击不同的item执行的方法\n\n};\nLevelItem.propTypes = {\n  list: PropTypes.array,\n  oldVal: PropTypes.string,\n  title: PropTypes.string,\n  handleClick: PropTypes.func\n};\nexport default _c4 = /*#__PURE__*/React.memo(LevelItem);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"ListItem\");\n$RefreshReg$(_c3, \"LevelItem\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Volumes/F/66/55/src/baseUI/level-item/index.js"],"names":["React","useState","useRef","useEffect","styled","Scroll","PropTypes","style","List","div","ListItem","span","LevelItem","props","list","oldVal","title","handleClick","CategoryRef","categoryDOM","current","spans","querySelectorAll","totalWidth","Array","from","forEach","ele","offsetWidth","width","map","item","key","name","defaultProps","propTypes","array","string","func","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Scroll from \"../scroll/index\";\nimport PropTypes from \"prop-types\";\nimport style from \"../../assets/global-style\";\n//列表的样式\nconst List = styled.div`\n    display:flex;\n    align-items:center;\n    height:30px;\n    overflow:hidden;\n    >span:first-of-type{\n        display:block;\n        flex:0 0 auto;\n        padding:5px 0;\n        margin-right:5px;\n        color:grey;\n        font-size:${style[\"font-size-m\"]};\n        vertical-align:middle;\n    }\n`;\n\n\n//每一个列表项目的样式\nconst ListItem = styled.span`\n    flex:0 0 auto;\n    font-size:${style[\"font-size-m\"]};\n    padding:5px 8px;\n    border-radius:10px;\n    &.selected{\n        color:${style[\"theme-color\"]};\n        border:1px solid ${style[\"theme-color\"]};\n        opacity:0.8;\n    }\n`;\n\n\nfunction LevelItem(props) {\n    const { list, oldVal, title } = props;\n    const { handleClick } = props;\n    const CategoryRef = useRef(null);\n    useEffect(() => {\n        let categoryDOM = CategoryRef.current;//获取其dom元素\n        let spans = categoryDOM.querySelectorAll(\"span\");//获取到span所有的标签\n        let totalWidth = 0;\n        Array.from(spans).forEach(ele => {\n            totalWidth += ele.offsetWidth;\n        })\n        categoryDOM.style.width = `${totalWidth}px`;//获取到内容宽度\n    }, [])\n    return (\n        <Scroll direction={\"horizontal\"}>\n                <List ref={CategoryRef}>\n                    <span>{title}</span>\n                    {\n                        list.map(item => {\n                            return (\n                                <ListItem key={item.key} className={`${oldVal === item.key ? \"selected\" : \"\"}`} onClick={() => handleClick(item.key)}>\n                                    {item.name}\n                                </ListItem>\n                            )\n                        })\n                    }\n                </List>\n        </Scroll >\n    )\n}\n\n\nLevelItem.defaultProps = {\n    list: [],//接收到的列表数据\n    oldVal: \"\",//当前的item值\n    title: \"\",//列表左边的标题\n    handleClick: null,///点击不同的item执行的方法\n}\n\nLevelItem.propTypes = {\n    list: PropTypes.array,\n    oldVal: PropTypes.string,\n    title: PropTypes.string,\n    handleClick: PropTypes.func,\n}\n\nexport default React.memo(LevelItem);"]},"metadata":{},"sourceType":"module"}