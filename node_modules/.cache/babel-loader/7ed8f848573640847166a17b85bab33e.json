{"ast":null,"code":"import { getHotSingerListRequest, getSingerListRequest } from \"api/request\";\nimport { CHANGE_SINGER_LIST, CHANGE_PAGE_COUNT, CHANGE_ENTER_LOADING, CHANGE_PULLUP_LOADING, CHANGE_PULLDOWN_LOADING } from \"./constants\";\nimport { fromJS } from \"immutable\"; //修改歌手列表\n\nconst changeSingerList = data => ({\n  type: CHANGE_SINGER_LIST,\n  data: fromJS(data)\n}); //修改页数\n\n\nexport const changePageCount = data => ({\n  type: CHANGE_PAGE_COUNT,\n  data\n}); // 进场loading\n\nexport const changeEnterLoading = data => ({\n  type: CHANGE_ENTER_LOADING,\n  data\n}); // 底部上拉的loading\n\nexport const changePullUpLoading = data => ({\n  type: CHANGE_PULLUP_LOADING,\n  data\n}); //顶部下拉的loading\n\nexport const changePullDownLoading = data => ({\n  type: CHANGE_PULLDOWN_LOADING,\n  data\n}); //第一次加载热门歌手\n\nexport const getHotSingerList = () => {\n  return dispatch => {\n    getHotSingerListRequest(0).then(res => {\n      const data = res.artists;\n      dispatch(changeSingerList(data));\n      dispatch(changeEnterLoading(false));\n      dispatch(changePullDownLoading(false));\n    }).catch(() => {\n      console.log(\"热门歌手获取数据失败\");\n    });\n  };\n}; //加载更多的热门歌手\n\nexport const refreshMoreHotSingerList = () => {\n  return (dispatch, getState) => {\n    const pageCount = getState().getIn([\"singers\", \"pageCount\"]);\n    const singerList = getState().getIn([\"singers\", \"singerList\"]).toJS();\n    getHotSingerListRequest(pageCount).then(res => {\n      const data = [...singerList, ...res.artists];\n      dispatch(changeSingerList(data));\n      dispatch(changePullUpLoading(false));\n    }).catch(() => {\n      console.log(\"热门歌手加载失败\");\n    });\n  };\n}; //第一次加载时，关闭进场的loading和pullDown(顶部下拉)的loading;\n//加载更多的时候，关闭pullUp(底部上拉)的loading\n//第一次加载相应类别歌手\n\nexport const getSingerList = (category, alpha) => {\n  return (dispatch, getState) => {\n    getSingerListRequest(category, alpha, 0).then(res => {\n      const data = res.artists;\n      dispatch(changeSingerList(data));\n      dispatch(changeEnterLoading(false));\n      dispatch(changePullDownLoading(false)); //顶部下拉loading结束\n    });\n  };\n}; //加载更多类别歌手\n\nexport const refreshMoreSingerList = (category, alpha) => {\n  return (dispatch, getState) => {\n    const pageCount = getState().getIn([\"singers\", \"pageCount\"]);\n    const singerList = getState().getIn([\"singers\", \"singerList\"]).toJS();\n    getSingerListRequest(category, alpha, pageCount).then(res => {\n      const data = [...singerList, ...res.artists];\n      dispatch(changePageCount(pageCount));\n      dispatch(changePullUpLoading(false)); //底部上拉loading结束\n    }).catch(() => {\n      console.log(\"歌手获取数据失败\");\n    });\n  };\n};","map":{"version":3,"sources":["/Volumes/F/66/55/src/application/Singers/store/actionCreators.js"],"names":["getHotSingerListRequest","getSingerListRequest","CHANGE_SINGER_LIST","CHANGE_PAGE_COUNT","CHANGE_ENTER_LOADING","CHANGE_PULLUP_LOADING","CHANGE_PULLDOWN_LOADING","fromJS","changeSingerList","data","type","changePageCount","changeEnterLoading","changePullUpLoading","changePullDownLoading","getHotSingerList","dispatch","then","res","artists","catch","console","log","refreshMoreHotSingerList","getState","pageCount","getIn","singerList","toJS","getSingerList","category","alpha","refreshMoreSingerList"],"mappings":"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","sourcesContent":["import { getHotSingerListRequest, getSingerListRequest } from \"api/request\";\nimport { CHANGE_SINGER_LIST, CHANGE_PAGE_COUNT, CHANGE_ENTER_LOADING, CHANGE_PULLUP_LOADING, CHANGE_PULLDOWN_LOADING } from \"./constants\";\nimport { fromJS } from \"immutable\";\n\n//修改歌手列表\nconst changeSingerList = (data) => ({\n    type: CHANGE_SINGER_LIST,\n    data: fromJS(data),\n})\n//修改页数\nexport const changePageCount = (data) => ({\n    type: CHANGE_PAGE_COUNT,\n    data\n})\n\n// 进场loading\nexport const changeEnterLoading = (data) => ({\n    type: CHANGE_ENTER_LOADING,\n    data\n})\n\n// 底部上拉的loading\nexport const changePullUpLoading = (data) => ({\n    type: CHANGE_PULLUP_LOADING,\n    data\n})\n\n//顶部下拉的loading\nexport const changePullDownLoading = (data) => ({\n    type: CHANGE_PULLDOWN_LOADING,\n    data\n})\n\n\n//第一次加载热门歌手\nexport const getHotSingerList = () => {\n    return (dispatch) => {\n        getHotSingerListRequest(0).then(res => {\n            const data = res.artists;\n            dispatch(changeSingerList(data));\n            dispatch(changeEnterLoading(false));\n            dispatch(changePullDownLoading(false));\n        }).catch(() => {\n            console.log(\"热门歌手获取数据失败\")\n        })\n    }\n}\n\n//加载更多的热门歌手\nexport const refreshMoreHotSingerList = () => {\n    return (dispatch, getState) => {\n        const pageCount = getState().getIn([\"singers\", \"pageCount\"]);\n        const singerList = getState().getIn([\"singers\", \"singerList\"]).toJS();\n        getHotSingerListRequest(pageCount).then(res => {\n            const data = [...singerList, ...res.artists];\n            dispatch(changeSingerList(data));\n            dispatch(changePullUpLoading(false));\n        }).catch(() => {\n            console.log(\"热门歌手加载失败\")\n        })\n    }\n}\n\n\n//第一次加载时，关闭进场的loading和pullDown(顶部下拉)的loading;\n//加载更多的时候，关闭pullUp(底部上拉)的loading\n//第一次加载相应类别歌手\nexport const getSingerList = (category, alpha) => {\n    return (dispatch, getState) => {\n        getSingerListRequest(category, alpha, 0).then(res => {\n            const data = res.artists;\n            dispatch(changeSingerList(data));\n            dispatch(changeEnterLoading(false));\n            dispatch(changePullDownLoading(false));//顶部下拉loading结束\n        })\n    }\n}\n\n//加载更多类别歌手\nexport const refreshMoreSingerList = (category, alpha) => {\n    return (dispatch, getState) => {\n        const pageCount = getState().getIn([\"singers\", \"pageCount\"]);\n        const singerList = getState().getIn([\"singers\", \"singerList\"]).toJS();\n        getSingerListRequest(category, alpha, pageCount).then(res => {\n            const data = [...singerList, ...res.artists];\n            dispatch(changePageCount(pageCount));\n            dispatch(changePullUpLoading(false));//底部上拉loading结束\n        }).catch(() => {\n            console.log(\"歌手获取数据失败\")\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}